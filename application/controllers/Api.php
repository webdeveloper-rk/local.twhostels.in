<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Api extends CI_Controller {
 function __construct()    {        // Construct the parent class        parent::__construct();		$this->load->library("CI_Jwt");         // Configure limits on our controller methods    }
 
	public function index()
	{	}	  public function login()    {        $school_code = trim($this->input->post('school_code'));		 $password =  trim($this->input->post('password'));				if($school_code == "" || $password =="")		{			send_json_result([                'status' =>  FALSE ,                'message' => 'Please fill all the fields '            ] ); // NOT_FOUND (404) being the HTTP response code		}						$rset = $this->db->get_where('student_logins', array('school_code' => $school_code,'password'=>md5($password),'status'=>'1'));		$users_found = $rset->num_rows();				 // $sql = $this->db->last_query();				if($users_found > 0 )		{			$user_info  = $rset->result(); 						$users['status'] = 'TRUE';			$users['message'] = "Successfully logged in";			$users['uid'] = $user_info[0]->uid;			$users['school_code'] = $user_info[0]->school_code;			$users['school_id'] = $user_info[0]->school_id; 			$users['user_name'] = $user_info[0]->name;			$users['role'] = $user_info[0]->utype;			 		}		 		 if ($users_found )        {						$token_generated = $this->ci_jwt->jwt_encode($users);			$response = array();			$response['status'] = TRUE; 						$response['token'] =  $token_generated; 			$response['message'] = "Logged in Successfully.";						            send_json_result($response ); // OK (200) being the HTTP response code        }        else        {            send_json_result([                'status' =>  FALSE ,                'message' => 'Invalid login details'            ] );          }				    }		public function upload()	{			$food_session  = $this->input->post("food_session");									 			switch($food_session )			{				case 'breakfast':								$food_session_id = 1;								break;				case 'lunch':								$food_session_id = 2;								break;				case 'snacks':								$food_session_id = 3;								break;				case 'dinner':								$food_session_id = 4;								break;				default:								$food_session_id = "";								break;			}						$rs = $this->db->query("SELECT session_id from food_pics_sessions where now() BETWEEN start_hour and end_hour and session_id='$food_session_id'");						/*if($rs->num_rows()==0)			{				$data = array('status'=>false,'message' => 'Session time expired' ); 		 				send_json_result($data );  			}*/ 						$fooditem_title= $this->input->post("fooditem_title"); 			$location_latitude= $this->input->post("location_latitude");			$location_langitude= $this->input->post("location_langitude");			$location_addr = $this->input->post("location_addr"); 						if($food_session_id  == "" || $fooditem_title =="" || $location_latitude =="" || $location_langitude == "" || $location_addr == "")			{				$data = array('status'=>false,'message' => 'Please fill the all required fields.' ); 		 				send_json_result($data );  			}			$config['upload_path']   = './foodgallery/'; 			$config['allowed_types'] = 'gif|jpg|png'; 			//$config['max_size']      = 2000; 			//$config['max_width']     = 1024; 			//$config['max_height']    = 768;  			$config['file_ext_tolower']    = true;  			$config['file_name']    = time().rand(10000,999999);  			$this->load->library('upload', $config);			$token = $this->input->get_request_header('token', TRUE);			$token = isset($token ) ? $token : $this->input->get_request_header('Token', TRUE);;			$token_generated = $this->ci_jwt->jwt_decode($token);			//print_r($token_generated);die;			$uid = $token_generated->uid;			$school_id = $token_generated->school_id;			$school_code = $token_generated->school_code;			$mobile_number = $token_generated->mobile_number;			if ( ! $this->upload->do_upload('userfile')) {					$data = array('status'=>false,'message' => $this->upload->display_errors()); 			}			else {					$uploaded_data = $this->upload->data();					$data = array('status'=>true,'message' => 'uploaded successfully.','filename' =>$uploaded_data['file_name'],'filepath'=>site_url()."foodgallery/".$uploaded_data['file_name'] ); 										$insert_data = array();					$insert_data['school_id']	=	$school_id;					$insert_data['school_code']	=	$school_code;					$insert_data['food_session_id']	=	$food_session_id;					$insert_data['fooditem_title']	=	$fooditem_title;					$insert_data['food_pic']	=	$uploaded_data['file_name'];										$insert_data['location_latitude']	=	$location_latitude;					$insert_data['location_langitude']	=	$location_langitude;					$insert_data['location_addr']		=	$location_addr;					$insert_data['uploaded_by']			=	$uid; 										$this->db->insert("food_pics",$insert_data);			} 			send_json_result($data );  
	}	public function getlist()	{						$token = $this->input->get_request_header('token', TRUE);			$token = isset($token ) ? $token : $this->input->get_request_header('Token', TRUE);;			$token_generated = $this->ci_jwt->jwt_decode($token);			//print_r($token_generated);die;			$uid = $token_generated->uid;			$school_id = $token_generated->school_id;			$school_code = $token_generated->school_code;			$mobile_number = $token_generated->mobile_number;						$posted_date = $this->input->post('date');			  if($posted_date == ""){					 					$posted_date  = date('Y-m-d');			}						  				$date_condition = " and date_format(uploaded_date,'%Y-%m-%d')='$posted_date' ";							 				  $sql= "select *,date_format(uploaded_date,'%Y-%m-%d') as rdate from food_pics	where school_id='".$school_id."'  $date_condition  order by uploaded_date desc";				$rs = $this->db->query($sql);				$list = array();								$list['breakfast'] = array();				$list['lunch'] = array();				$list['snacks'] = array();				$list['dinner'] = array(); 												$sessions = array(1=>"breakfast",2=>"lunch",3=>"snacks",4=>"dinner");				foreach($rs->result() as $row)				{					$session_name = $sessions[$row->food_session_id];					$list[$session_name][] = array('title'=>$row->fooditem_title, 'pic'=>site_url()."foodgallery/".$row->food_pic);				}				$data = array('status'=>true,'message' => 'Fetched','records'=>$list); 				send_json_result($data );  	}					/************************************************************************************					***************************************************************************************/	public function updatepassword()    {			$token = $this->input->get_request_header('token', TRUE);			$token = isset($token ) ? $token : $this->input->get_request_header('Token', TRUE);;		             $new_password = $this->input->post('new_password');		 $confirm_password =  $this->input->post('confirm_password');		if($new_password != $confirm_password ||$new_password =='' )		{			 send_json_result([                'status' => FALSE,                'message' => "Passwords didn't  matched. please try again."            ]);		}		else{			   			   $token_generated = $this->ci_jwt->jwt_decode($token); 			   // print_r($token_generated);die;			  $data = array('password' => md5($new_password));			  			  			  if(!isset($token_generated->uid))					$uid = 0;				else 					$uid = $token_generated->uid;			  $this->db->where('uid',  $uid);			  $this->db->update('student_logins', $data); 			//echo  $this->db->last_query();			  $response = array();			$response['status'] = TRUE; 									$response['message'] = "Password Updated Successfully.";						            send_json_result($response); // OK (200) being the HTTP response code								}				 				 		    }	public function check_access()	{						$token = $this->input->get_request_header('token', TRUE);			$token = isset($token ) ? $token : $this->input->get_request_header('Token', TRUE);;												$token_generated = $this->ci_jwt->jwt_decode($token);						$rs = $this->db->query("SELECT session_id														FROM food_pics_sessions														WHERE  DATE_FORMAT( NOW( ) ,  '%H:%i' ) 														BETWEEN start_hour														AND end_hour");						$session_timings = array("1"=>"breakfast","2"=>"lunch","3"=>"snacks","4"=>'dinner');									$session_flags = array("breakfast"=>false,"lunch"=>false,"snacks"=>false,'dinner'=>false);			foreach($rs->result() as $row)			{				$session_flags[$session_timings[$row->session_id]] = true;			}												$rs = $this->db->query("SELECT session_id,date_format(start_hour,'%l:%i %p') as start_hour,date_format(end_hour,'%l:%i %p') as end_hour FROM food_pics_sessions");						$session_msgs = array();			$session_timings_text = array();			foreach($rs->result() as $row)			{				$session_msgs[$session_timings[$row->session_id]] = ucfirst($session_timings[$row->session_id])." Entries allowed from ".$row->start_hour. " to  ".$row->end_hour." only.";;				$session_timings_text[$session_timings[$row->session_id]] = ucfirst($session_timings[$row->session_id])." Timings :  ".$row->start_hour. " to  ".$row->end_hour." .";;			}												$response['app_version'] = $this->config->item('app_version'); 									$response['force_update'] = $this->config->item('force_update'); 							$response['status'] = TRUE; 									$response['message'] = "";			$response['session_timings_text'] = $session_timings_text ;			$response['session_msgs'] = $session_msgs;			$response['sessions'] = $session_flags;						$response['item_names'] = $this->specials_list();			 send_json_result($response); 				}
	 /*********************************************************	 	 get speical Items List	 	 *********************************************************/	 	 	 public function  specials_list()	{						$token = $this->input->get_request_header('token', TRUE);			$token = isset($token ) ? $token : $this->input->get_request_header('Token', TRUE);;			$token_generated = $this->ci_jwt->jwt_decode($token);			//print_r($token_generated);die;			$uid = $token_generated->uid;			$school_id = $token_generated->school_id;			$school_code = $token_generated->school_code; 			$today_date = date('Y-m-d');									$list = array();			//Add General Items 			$trs= $this->db->query("select item_name from app_general_items where status='1'");				foreach($trs->result() as $trow)				{					$list[] =  $trow->item_name ;				}									//Add special Items   			$rs = $this->db->query("select telugu_name,item_name , it.item_id from items it inner join item_approvals ita 					on it.item_id = ita.item_id and ita.school_id='$school_id' and ita.entry_date='$today_date' ");				foreach($rs->result() as $row)				{					$list[] =  $row->item_name ;				}				 return $list;	}			
	 
}
